-- OrionWrapper.lua
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local OrionLib = {}

function OrionLib:MakeWindow(config)
    local windowConfig = {
        Name = config.Name or "Default Name",
        HidePremium = config.HidePremium or false,
        SaveConfig = config.SaveConfig or false,
        ConfigFolder = config.ConfigFolder or "DefaultFolder",
        IntroEnabled = config.IntroEnabled or false,
        IntroText = config.IntroText or "",
        IntroIcon = config.IntroIcon or "",
        Icon = config.Icon or "",
        CloseCallback = config.CloseCallback or function() end
    }
    return Rayfield:CreateWindow(windowConfig)
end

function OrionLib:MakeTab(config)
    local tab = Rayfield:CreateTab(config.Name, config.Icon)
    -- Additional tab setup as needed
    return tab
end

function OrionLib:AddSection(config)
    local section = self:CreateSection(config.Name)
    -- Additional section setup as needed
    return section
end

function OrionLib:AddButton(config)
    self:CreateButton({
        Name = config.Name,
        Callback = config.Callback
    })
end

function OrionLib:AddToggle(config)
    self:CreateToggle({
        Name = config.Name,
        CurrentValue = config.Default or false,
        Flag = config.Flag or config.Name,
        Callback = config.Callback
    })
end

function OrionLib:AddColorpicker(config)
    self:CreateColorpicker({
        Name = config.Name,
        Default = config.Default or Color3.fromRGB(255, 255, 255),
        Callback = config.Callback
    })
end

function OrionLib:AddSlider(config)
    self:CreateSlider({
        Name = config.Name,
        Range = {config.Min or 0, config.Max or 100},
        Increment = config.Increment or 1,
        Suffix = config.ValueName or "",
        CurrentValue = config.Default or 0,
        Flag = config.Flag or config.Name,
        Callback = config.Callback
    })
end

function OrionLib:AddLabel(text)
    self:CreateLabel(text)
end

function OrionLib:AddParagraph(config)
    self:CreateParagraph(config.Name, config.Content)
end

function OrionLib:AddTextbox(config)
    self:CreateInput({
        Name = config.Name,
        Default = config.Default or "",
        TextDisappear = config.TextDisappear or false,
        Callback = config.Callback
    })
end

function OrionLib:AddKeybind(config)
    self:CreateKeybind({
        Name = config.Name,
        CurrentKeybind = config.Default or Enum.KeyCode.E,
        HoldToInteract = config.Hold or false,
        Flag = config.Flag or config.Name,
        Callback = config.Callback
    })
end

function OrionLib:AddDropdown(config)
    self:CreateDropdown({
        Name = config.Name,
        Options = config.Options or {},
        CurrentOption = config.Default or config.Options[1],
        Flag = config.Flag or config.Name,
        Callback = config.Callback
    })
end

function OrionLib:MakeNotification(config)
    Rayfield:Notify({
        Title = config.Name,
        Content = config.Content,
        Image = config.Image,
        Duration = config.Time
    })
end

function OrionLib:Init()
    Rayfield:Init()
end

function OrionLib:Destroy()
    Rayfield:Destroy()
end

return OrionLib
