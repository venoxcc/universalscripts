--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v83=0;while true do if (v83==0) then v19=v0(v3(v30,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v30,16));if v19 then local v102=0;local v103;while true do if (1==v102) then return v103;end if (v102==0) then v103=v5(v85,v19);v19=nil;v102=1;end end else return v85;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v86=(1637 -(1523 + 114)) -0 ;local v87;while true do if (v86==(0 -0)) then v87=(v31/(((3 + 0) -1)^(v32-1)))%(2^(((v33-((2 -0) -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v87-(v87%(569 -(367 + (1266 -(68 + 997))))) ;end end else local v88=((2199 -(226 + 1044)) -((931 -717) + (830 -(32 + 85))))^(v32-(1 + 0)) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (877 -(282 + 595)) ;end end local function v21() local v34=0;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + (958 -(892 + 65)) ;v34=2 -(1 -0) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + (352 -(87 + 263)) ;return (v37 * (436 -(67 + 113))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;return (v41 * (12338840 + 4438376)) + (v40 * (260471 -(524830 -329895))) + (v39 * (1208 -(802 + 150))) + v38 ;end local function v24() local v42=0 -(0 + 0) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 + 0)) then v45=998 -(915 + 82) ;v46=(v20(v44,2 -1 ,12 + 8 ) * ((2 -(0 -0))^32)) + v43 ;v42=1189 -(1069 + 118) ;end if (v42==(4 -2)) then v47=v20(v44,45 -24 ,31);v48=((v20(v44,6 + 26 )==1) and  -(1 -0)) or ((3 -2) + 0) ;v42=794 -(368 + 423) ;end if (v42==(9 -6)) then if (v47==(18 -(10 + 8))) then if (v46==0) then return v48 * (0 -0) ;else local v104=442 -(416 + 26) ;while true do if (v104==(0 -0)) then v47=1;v45=0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==(438 -(145 + (1152 -(814 + 45))))) and (v48 * ((431 -(44 + 386))/(1486 -(998 + (1202 -714)))))) or (v48 * NaN) ;end return v8(v48,v47-(325 + 698) ) * (v45 + (v46/((2 + 0)^(824 -(201 + 571))))) ;end if (v42==(1138 -(7 + 109 + 362 + 660))) then v43=v23();v44=v23();v42=4 -(888 -(261 + 624)) ;end end end local function v25(v49) local v50;if  not v49 then local v89=1423 -(630 + 793) ;while true do if (v89==((0 -0) -0)) then v49=v23();if (v49==(1080 -(1020 + 60))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;local v51={};for v66=1 + 0 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 396 -(115 + 281) ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v68=(function() return 0 -0 ;end)();while true do if (v68~=(0 -0)) then else if (v52~=(0 + 0)) then else local v98=(function() return 1467 -(899 + 568) ;end)();local v99=(function() return;end)();while true do if (v98==0) then v99=(function() return 0 + 0 ;end)();while true do if (v99~=(0 -0)) then else v53=(function() return function(v119,v120,v121) local v122=(function() return 0;end)();local v123=(function() return;end)();while true do if (v122~=(603 -(268 + 335))) then else v123=(function() return 290 -(60 + 230) ;end)();while true do if (v123~=(0 -0)) then else v119[v120-#"/" ]=(function() return v121();end)();return v119,v120,v121;end end break;end end end;end)();v54=(function() return {};end)();v99=(function() return 3 -2 ;end)();end if (v99==1) then local v114=(function() return 572 -(426 + 146) ;end)();while true do if (v114==(1 + 0)) then v99=(function() return 869 -(550 + 317) ;end)();break;end if (v114==(0 -0)) then v55=(function() return {};end)();v56=(function() return {};end)();v114=(function() return 1 -0 ;end)();end end end if (v99==2) then v52=(function() return 812 -(569 + 242) ;end)();break;end end break;end end end if (v52~=(2 -1)) then else local v100=(function() return 285 -(134 + 151) ;end)();while true do if (v100==(1667 -(970 + 695))) then v52=(function() return 2;end)();break;end if (v100==1) then v59=(function() return {};end)();for v109= #"|",v58 do local v110=(function() return 1251 -(721 + 530) ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110~=(1272 -(945 + 326))) then else v113=(function() return nil;end)();while true do if (v111==(0 -0)) then local v125=(function() return 0 -0 ;end)();local v126=(function() return;end)();while true do if (v125==0) then v126=(function() return 0;end)();while true do if (1==v126) then v111=(function() return 1991 -(582 + 1408) ;end)();break;end if (v126~=(0 + 0)) then else local v331=(function() return 700 -(271 + 429) ;end)();while true do if ((0 -0)==v331) then v112=(function() return v21();end)();v113=(function() return nil;end)();v331=(function() return 1 + 0 ;end)();end if (v331==1) then v126=(function() return 1 -0 ;end)();break;end end end end break;end end end if (v111==1) then if (v112== #"|") then v113=(function() return v21()~=(0 -0) ;end)();elseif (v112==(1826 -(1195 + 629))) then v113=(function() return v24();end)();elseif (v112== #"gha") then v113=(function() return v25();end)();end v59[v109]=(function() return v113;end)();break;end end break;end if (v110==(1288 -(993 + 295))) then v111=(function() return 0 -0 ;end)();v112=(function() return nil;end)();v110=(function() return 1;end)();end end end v100=(function() return 2;end)();end if (v100==(241 -(187 + 54))) then v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v100=(function() return 1 + 0 ;end)();end end end v68=(function() return 1 + 0 ;end)();end if (v68~=(1 + 0)) then else if ((1 + 1)==v52) then v57[ #"xxx"]=(function() return v21();end)();for v105= #"|",v23() do local v106=(function() return 529 -(406 + 123) ;end)();local v107=(function() return;end)();while true do if (v106==(0 -0)) then v107=(function() return v21();end)();if (v20(v107, #",", #"\\")==(0 -0)) then local v115=(function() return 1769 -(1749 + 20) ;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if (v115==(1 + 2)) then if (v20(v117, #"xxx", #"nil")== #"}") then v118[ #"xnxx"]=(function() return v59[v118[ #".dev"]];end)();end v54[v105]=(function() return v118;end)();break;end if (1==v115) then v118=(function() return {v22(),v22(),nil,nil};end)();if (v116==(1636 -(1373 + 263))) then local v129=(function() return 1322 -(1249 + 73) ;end)();local v130=(function() return;end)();while true do if (v129~=0) then else v130=(function() return 1000 -(451 + 549) ;end)();while true do if (v130==(0 + 0)) then v118[ #"-19"]=(function() return v22();end)();v118[ #"http"]=(function() return v22();end)();break;end end break;end end elseif (v116== #"[") then v118[ #"xnx"]=(function() return v23();end)();elseif (v116==2) then v118[ #"-19"]=(function() return v23() -((2 -0)^(26 -10)) ;end)();elseif (v116~= #"xxx") then else local v340=(function() return 0 + 0 ;end)();local v341=(function() return;end)();while true do if (v340==(1384 -(746 + 638))) then v341=(function() return 0 + 0 ;end)();while true do if (v341~=0) then else v118[ #"gha"]=(function() return v23() -((1147 -(466 + 679))^16) ;end)();v118[ #"http"]=(function() return v22();end)();break;end end break;end end end v115=(function() return 2 -0 ;end)();end if (v115==(4 -2)) then if (v20(v117, #"<", #":")~= #"]") then else v118[5 -3 ]=(function() return v59[v118[343 -(218 + 123) ]];end)();end if (v20(v117,2,1583 -(1535 + 46) )== #"[") then v118[ #"19("]=(function() return v59[v118[ #"19("]];end)();end v115=(function() return 3 + 0 ;end)();end if ((0 + 0)==v115) then v116=(function() return v20(v107,2, #"-19");end)();v117=(function() return v20(v107, #"asd1",6);end)();v115=(function() return 561 -(306 + 254) ;end)();end end end break;end end end for v108= #" ",v23() do v55,v108,v28=(function() return v53(v55,v108,v28);end)();end return v57;end break;end end end end local function v29(v60,v61,v62) local v63=v60[(3170 -1385) -(214 + 1570) ];local v64=v60[1 + 0 + 1 ];local v65=v60[(19 -11) -5 ];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=2 -1 ;local v74= -(1 + 0);local v75={};local v76={...};local v77=v12("#",...) -(115 -(4 + 110)) ;local v78={};local v79={};for v90=1726 -(1668 + 58) ,v77 do if ((v90>=v71) or (1131>3620)) then v75[v90-v71 ]=v76[v90 + (585 -(57 + 527)) ];else v79[v90]=v76[v90 + (1428 -(41 + 1386)) ];end end local v80=(v77-v71) + (2 -1) ;local v81;local v82;while true do local v91=103 -(17 + 86) ;while true do if (v91==(0 + (1026 -(834 + 192)))) then v81=v69[v73];v82=v81[1 -0 ];v91=2 -1 ;end if (v91==(1 + 0)) then if (v82<=(114 -80)) then if (v82<=(2010 -(109 + 1885))) then if ((v82<=(173 -(122 + 44))) or (1355==2800)) then if (v82<=(5 -2)) then if (v82<=(3 -2)) then if ((1959>262) and (v82>(0 + 0))) then v79[v81[1 + 1 + 0 ]]=v79[v81[5 -(1 + 1) ]] -v79[v81[69 -(30 + 35) ]] ;else local v134=0 + 0 ;local v135;local v136;while true do if ((v134==(1257 -(1043 + 214))) or (1839>=3774)) then v135=v81[2 + 0 ];v136=v79[v135];v134=3 -2 ;end if ((2811==2811) and ((1213 -(323 + 889))==v134)) then for v307=v135 + (2 -1) ,v81[583 -(361 + 219) ] do v7(v136,v79[v307]);end break;end end end elseif ((2146>1122) and (v82==((7 + 315) -((81 -28) + 267)))) then v79[v81[1 + 1 ]]=v81[2 + 1 ];else local v139=v81[415 -(15 + (702 -(300 + 4))) ];v79[v139]=v79[v139]();end elseif (v82<=(987 -(18 + 964))) then if ((v82>(14 -10)) or (56==3616)) then v79[v81[1 + 1 ]][v81[2 + 1 ]]=v81[3 + 1 ];else v79[v81[(228 + 624) -(20 + (2172 -1342)) ]]=v79[v81[(1984 -(112 + 250)) -(1427 + 192) ]] * v81[2 + 2 + 0 ] ;end elseif (v82>(132 -(116 + 10))) then local v144=v81[1 + (2 -1) ];local v145={v79[v144](v79[v144 + 1 + 0 ])};local v146=0 -0 ;for v225=v144,v81[2 + 2 ] do local v226=0 + 0 ;while true do if (v226==(0 + 0)) then v146=v146 + (2 -1) ;v79[v225]=v145[v146];break;end end end else local v147=v81[4 -2 ];v79[v147]=v79[v147](v13(v79,v147 + (1552 -(1126 + 425)) ,v81[408 -(62 + 56 + 287) ]));end elseif (v82<=(43 -32)) then if (v82<=(1130 -(118 + 1003))) then if ((v82>(1814 -(1202 + 604))) or (2421<622)) then local v149=v81[5 -(3 + 0) ];v79[v149]=v79[v149](v13(v79,v149 + (378 -(142 + 235)) ,v74));else local v151=v81[9 -7 ];local v152=v79[v151];local v153=v81[4 -1 ];for v227=1 + 0 ,v153 do v152[v227]=v79[v151 + v227 ];end end elseif ((1009<=1130) and (v82==(987 -(553 + 211 + 213)))) then v79[v81[2 + 0 ]]=v79[v81[3 + 0 ]][v81[7 -3 ]];else local v156=v81[2 + 0 ];local v157,v158=v72(v79[v156](v13(v79,v156 + 1 + 0 ,v81[3 + 0 ])));v74=(v158 + v156) -(1 + 0) ;local v159=0 + 0 + 0 ;for v230=v156,v74 do v159=v159 + (1415 -(1001 + 413)) + 0 ;v79[v230]=v157[v159];end end elseif (v82<=13) then if ((2758<2980) and (v82>(25 -13))) then local v160=v81[2];v79[v160]=v79[v160](v79[v160 + 1 ]);else local v162=0 -(0 -0) ;local v163;local v164;while true do if (v162==((884 -(244 + 638)) -1)) then v79[v163 + 1 + 0 ]=v164;v79[v163]=v164[v81[1952 -(1096 + (1545 -(627 + 66))) ]];break;end if (v162==(0 -0)) then v163=v81[(2249 -1494) -(239 + 514) ];v164=v79[v81[2 + 1 ]];v162=1330 -(797 + (1134 -(512 + 90))) ;end end end elseif (v82<=(11 + 3)) then do return v79[v81[(1907 -(1665 + 241)) + (718 -(373 + 344)) ]];end elseif (v82==(34 -19)) then local v256=v81[1204 -(373 + 374 + 455) ];local v257={};for v291=(194 + 538) -((1255 -779) + 255) , #v78 do local v292=v78[v291];for v310=726 -((385 -157) + 498) , #v292 do local v311=v292[v310];local v312=v311[1131 -(369 + 761) ];local v313=v311[2];if ((v312==v79) and (v313>=v256)) then v257[v313]=v312[v313];v311[1 + 0 ]=v257;end end end elseif (v79[v81[665 -(174 + 489) ]]==v81[3 + 1 ]) then v73=v73 + (1906 -(830 + 1075)) ;else v73=v81[(1104 -(35 + 1064)) -(2 + 0) ];end elseif (v82<=(47 -(46 -24))) then if ((v82<=(258 -(1 + 63 + (1410 -(298 + 938))))) or (86>=3626)) then if (v82<=(15 + 3)) then if (v82>((2438 -(233 + 1026)) -(171 + (2657 -(636 + 1030))))) then local v165=v81[1 + 1 ];v79[v165]=v79[v165](v79[v165 + (1 -(0 + 0)) ]);else v79[v81[338 -(144 + 192) ]]=v79[v81[219 -(42 + 174) ]] -v79[v81[4 + 0 ]] ;end elseif (v82==(16 + 0 + 3)) then v79[v81[6 -4 ]]={};else local v169=v81[1 + 1 ];do return v13(v79,v169,v169 + v81[1507 -(363 + 339 + 802) ] );end end elseif ((2395==2395) and (v82<=22)) then if (v82>(33 -12)) then v79[v81[1582 -(1183 + 397) ]]={};else v62[v81[8 -5 ]]=v79[v81[160 -(91 + 67) ]];end elseif ((3780>2709) and (v82<=((5 + 63) -45))) then v79[v81[1 + 1 ]]=v79[v81[3]][v81[527 -(423 + 100) ]];elseif ((v82==(18 + 6)) or (237>=2273)) then local v258=0 + 0 ;local v259;local v260;while true do if (v258==(1976 -(1913 + 62))) then for v345=2 -1 , #v78 do local v346=v78[v345];for v349=0 + 0 , #v346 do local v350=v346[v349];local v351=v350[1 + 0 ];local v352=v350[5 -3 ];if ((v351==v79) and (v352>=v259)) then v260[v352]=v351[v352];v350[1934 -(565 + 1368) ]=v260;end end end break;end if ((v258==(0 -0)) or (2040<=703)) then v259=v81[2];v260={};v258=1662 -(1477 + 184) ;end end else v62[v81[3 -0 ]]=v79[v81[34 -(19 + 13) ]];end elseif (v82<=(28 + (222 -(55 + 166)))) then if (v82<=(62 -(7 + 28))) then if (v82>(882 -(564 + 30 + 262))) then local v175=v70[v81[(15 -11) -1 ]];local v176;local v177={};v176=v10({},{__index=function(v233,v234) local v235=v177[v234];return v235[298 -(36 + 261) ][v235[1 + 1 ]];end,__newindex=function(v236,v237,v238) local v239=0 -0 ;local v240;while true do if ((3279<=3967) and (v239==(304 -(244 + 60)))) then v240=v177[v237];v240[1 + 0 ][v240[478 -(41 + 435) ]]=v238;break;end end end});for v241=2 -1 ,v81[1005 -(938 + 63) ] do v73=v73 + 1 + 0 ;local v242=v69[v73];if (v242[1126 -(936 + 189) ]==(31 + 27)) then v177[v241-(1 + 0) ]={v79,v242[2 + 1 ]};else v177[v241-1 ]={v61,v242[7 -4 ]};end v78[ #v78 + (1 -0) ]=v177;end v79[v81[1094 -(975 + 117) ]]=v29(v175,v176,v62);else local v179=1858 -(673 + 1185) ;local v180;local v181;local v182;while true do if (((1875 -(157 + 1718))==v179) or (1988==877)) then v180=v70[v81[3 + 0 ]];v181=nil;v179=3 -2 ;end if (v179==(3 -(1285 -(1035 + 248)))) then v182={};v181=v10({},{__index=function(v317,v318) local v319=v182[v318];return v319[1019 -(697 + 321) ][v319[2 + 0 ]];end,__newindex=function(v320,v321,v322) local v323=v182[v321];v323[1 -0 ][v323[5 -3 ]]=v322;end});v179=(24 -(20 + 1)) -1 ;end if ((4291>1912) and (v179==((3 + 1) -2))) then for v325=1 + 0 ,v81[6 -2 ] do v73=v73 + (2 -(320 -(134 + 185))) ;local v326=v69[v73];if (v326[1228 -(322 + 905) ]==((1802 -(549 + 584)) -(602 + 9))) then v182[v325-(1190 -(449 + 740)) ]={v79,v326[875 -(826 + 46) ]};else v182[v325-(948 -(245 + (2409 -1707))) ]={v61,v326[1901 -(260 + 1638) ]};end v78[ #v78 + (441 -(382 + (1026 -(478 + 490)))) ]=v182;end v79[v81[7 -5 ]]=v29(v180,v181,v62);break;end end end elseif (v82>(89 -(33 + 28))) then local v183=v81[(1174 -(786 + 386)) + 1 ];local v184=v79[v183];for v244=v183 + (2 -1) ,v81[4 + 0 ] do v184=v184   .. v79[v244] ;end v79[v81[3 -(3 -2) ]]=v184;elseif (v81[5 -3 ]==v79[v81[1209 -(902 + 303) ]]) then v73=v73 + (1 -0) ;else v73=v81[6 -3 ];end elseif ((2003<2339) and (v82<=((1382 -(1055 + 324)) + 28))) then if (v82>(1720 -(1121 + 569))) then local v186=214 -(22 + 192) ;local v187;local v188;while true do if ((683 -(483 + 200))==v186) then v187=v81[(2806 -(1093 + 247)) -(1404 + 59) ];v188=v79[v187];v186=2 -1 ;end if (v186==(1 -0)) then for v328=v187 + (766 -(468 + 297)) ,v81[566 -(334 + 228) ] do v188=v188   .. v79[v328] ;end v79[v81[6 -4 ]]=v188;break;end end else v79[v81[2 + 0 ]]=v62[v81[6 -3 ]];end elseif (v82<=(57 -25)) then local v191=0 + 0 ;local v192;while true do if (v191==(1049 -(572 + 477))) then v192=v81[238 -(141 + 95) ];v79[v192]=v79[v192](v13(v79,v192 + 1 + 0 ,v74));break;end end elseif (v82>(4 + 29)) then local v264=v81[4 -2 ];local v265=v79[v264];local v266=v81[6 -3 ];for v302=1 + 0 ,v266 do v265[v302]=v79[v264 + v302 ];end elseif ((432==432) and (v81[2]==v79[v81[10 -6 ]])) then v73=v73 + 1 ;else v73=v81[3 + 0 ];end elseif (v82<=(27 + 22 + 2)) then if (v82<=(58 -16)) then if ((v82<=(23 + 15)) or (1145>=1253)) then if (v82<=(199 -(92 + 71))) then if ((3418>2118) and (v82==(18 + 17))) then v73=v81[(1 + 3) -1 ];else v79[v81[767 -(574 + 191) ]]=v79[v81[3 + 0 ]];end elseif (v82>(2 + 35)) then v79[v81[4 -(7 -5) ]]=v61[v81[10 -7 ]];else do return;end end elseif (v82<=(37 + 3)) then if ((3066<=3890) and (v82==((67 -47) + 19))) then if v79[v81[851 -(254 + 595) ]] then v73=v73 + (127 -(55 + 71)) ;else v73=v81[3 -0 ];end else v79[v81[1792 -(573 + (3462 -2245)) ]]= #v79[v81[8 -5 ]];end elseif (v82>(4 + 37)) then v79[v81[2 -0 ]]=v62[v81[10 -7 ]];else v73=v81[942 -(714 + 225) ];end elseif ((v82<=(134 -88)) or (2998>=3281)) then if (v82<=((296 -178) -74)) then if ((v82>(59 -16)) or (4649<=2632)) then local v202=v81[3 -1 ];local v203={v79[v202](v79[v202 + (1 -0) ])};local v204=806 -(118 + 688) ;for v245=v202,v81[52 -(25 + 23) ] do v204=v204 + 1 + 0 ;v79[v245]=v203[v204];end else do return;end end elseif (v82==(12 + 12 + 21)) then if  not v79[v81[1888 -(927 + 959) ]] then v73=v73 + (3 -2) ;else v73=v81[735 -(16 + 716) ];end else v79[v81[(11 -8) -(3 -2) ]]=v81[100 -(11 + 86) ];end elseif (v82<=(116 -68)) then if (v82>(332 -(175 + 110))) then v79[v81[4 -2 ]][v81[14 -11 ]]=v79[v81[1800 -(503 + 1293) ]];else local v209=v81[5 -3 ];v79[v209](v79[v209 + 1 + 0 ]);end elseif (v82<=(36 + 10 + 3)) then v79[v81[1063 -(810 + 251) ]]= #v79[v81[3 + 0 ]];elseif (v82>(16 + 34)) then local v269=v81[2 + 0 ];v79[v269]=v79[v269]();else local v271=0 + 0 ;local v272;local v273;while true do if (((534 -((109 -66) + 490))==v271) or (3860>4872)) then v79[v272 + ((1422 -(364 + 324)) -(711 + 22)) ]=v273;v79[v272]=v273[v81[185 -(92 + 89) ]];break;end if (v271==(0 -0)) then v272=v81[861 -((657 -417) + 619) ];v273=v79[v81[1 + (4 -2) ]];v271=1 -0 ;end end end elseif (v82<=(36 + 24)) then if (v82<=(4 + 17 + 34)) then if (v82<=(1797 -(1344 + 400))) then if (v82==((1912 -1455) -((408 -153) + 150))) then local v211=v81[2 + 0 ];v79[v211]=v79[v211](v13(v79,v211 + 1 + 0 ,v81[2 + 1 ]));elseif (v79[v81[8 -6 ]]==v81[12 -8 ]) then v73=v73 + (1740 -(404 + 1335)) ;else v73=v81[409 -(183 + 223) ];end elseif ((v82>(124 -70)) or (3998==2298)) then local v213=v81[1191 -(442 + 747) ];v79[v213](v13(v79,v213 + (1 -0) ,v81[2 + 1 ]));else local v214=0 + 0 ;local v215;while true do if ((337 -(10 + 327))==v214) then v215=v81[1 + (2 -1) ];v79[v215](v13(v79,v215 + (790 -(766 + 23)) ,v81[3 + 0 ]));break;end end end elseif (v82<=(281 -224)) then if (v82>(394 -(118 + 220))) then if  not v79[v81[1 + 1 ]] then v73=v73 + 1 ;else v73=v81[452 -(108 + 341) ];end elseif (v79[v81[6 -4 ]] or (8>=2739)) then v73=v73 + 1 + (1268 -(1249 + 19)) ;else v73=v81[12 -9 ];end elseif (v82<=(1551 -(711 + 706 + 76))) then v79[v81[3 -1 ]]=v79[v81[472 -(270 + (774 -575)) ]];elseif ((2590==2590) and (v82>(972 -(910 + 3)))) then v79[v81[1 + 1 ]]=v61[v81[1822 -(580 + 1239) ]];else local v279=v81[5 -(1089 -(686 + 400)) ];v79[v279](v79[v279 + 1 + 0 ]);end elseif (v82<=(3 + 61)) then if ((v82<=((950 + 260) -((785 -(73 + 156)) + 592))) or (82>=1870)) then if (v82>(1 + 26 + 34)) then v79[v81[810 -(329 + 479) ]]=v79[v81[857 -(174 + 680) ]] * v81[9 -5 ] ;else do return v79[v81[3 -1 ]];end end elseif ((2624<4557) and (v82>(40 + 23))) then for v248=v81[1169 -(645 + 522) ],v81[1793 -((1821 -(721 + 90)) + 780) ] do v79[v248]=nil;end else local v219=v81[2 + 0 + 0 ];local v220,v221=v72(v79[v219](v13(v79,v219 + 1 + (0 -0) ,v81[(484 -(224 + 246)) -11 ])));v74=(v221 + v219) -(2 -1) ;local v222=(2974 -1138) -(1045 + 791) ;for v250=v219,v74 do v222=v222 + (2 -1) ;v79[v250]=v220[v222];end end elseif (v82<=((184 -84) -34)) then if (v82==(570 -(351 + 28 + 126))) then if (v79[v81[1576 -(1281 + 293) ]]==v79[v81[270 -(1 + 27 + 238) ]]) then v73=v73 + (2 -1) ;else v73=v81[1562 -(1381 + 178) ];end else v79[v81[2]][v81[3 + 0 ]]=v81[4 + 0 ];end elseif (v82<=(55 + 12)) then for v253=v81[1 + 1 ],v81[3] do v79[v253]=nil;end elseif ((v82>68) or (3131>3542)) then if (v79[v81[6 -4 ]]==v79[v81[3 + 1 ]]) then v73=v73 + (471 -(381 + 66 + 23)) ;else v73=v81[3 + 0 ];end else v79[v81[2 + 0 ]][v81[4 -1 ]]=v79[v81[1160 -(1074 + 82) ]];end v73=v73 + (1 -0) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
