--made by venox
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v88=v2(v0(v30,16));if v19 then local v107=v5(v88,v19);v19=nil;return v107;else return v88;end end end);local function v20(v31,v32,v33) if v33 then local v89=(v31/((5 -3)^(v32-((118 -(32 + 85)) + 0))))%((1 + 1)^(((v33-(2 -1)) -(v32-(1 -0))) + (2 -1))) ;return v89-(v89%(1 -0)) ;else local v90=(621 -(555 + 64))^(v32-(932 -(857 + 73 + 1))) ;return (((v31%(v90 + v90))>=v90) and (569 -(367 + 201))) or (0 -0) ;end end local function v21() local v34=0;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==(957 -(892 + 65))) then v35=v1(v16,v18,v18);v18=v18 + (2 -1) ;v34=(1 -0) -0 ;end end end local function v22() local v36=350 -(87 + (1260 -(915 + 82))) ;local v37;local v38;while true do if (v36==1) then return (v38 * (436 -(67 + 113))) + v37 ;end if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;v36=1 + (0 -0) ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + 2 + 1 );v18=v18 + (4 -0) ;return (v42 * (16778403 -(1069 + 118))) + (v41 * 65536) + (v40 * (580 -(708 -384))) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1 + 0 ;local v46=(v20(v44,1 -0 ,(83 -63) + 0 ) * ((793 -(368 + 423))^(100 -68))) + v43 ;local v47=v20(v44,21,31);local v48=((v20(v44,50 -(10 + 8) )==(3 -2)) and  -(443 -(416 + 26))) or ((2 + 1) -2) ;if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * (438 -(145 + 293)) ;else v47=431 -(44 + 386) ;v45=1486 -(998 + 488) ;end elseif (v47==(651 + 1396)) then return ((v46==(0 + (0 -0))) and (v48 * (((2744 -1971) -((1060 -(814 + 45)) + 571))/0))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((1140 -(116 + 1022))^(127 -75)))) ;end local function v25(v49) local v50;if  not v49 then local v91=0 -0 ;while true do if ((0 + 0 + 0)==v91) then v49=v23();if (v49==(1423 -(630 + 793))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=886 -(261 + (2148 -1524)) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0;end)();local v93=(function() return;end)();local v95=(function() return;end)();while true do if (0==v92) then local v112=(function() return 651 -(494 + 157) ;end)();local v113=(function() return;end)();while true do if (v112~=(0 -0)) then else v113=(function() return 0 + 0 ;end)();while true do if (0==v113) then v93=(function() return v94();end)();v95=(function() return nil;end)();v113=(function() return 1 + 0 ;end)();end if (v113~=1) then else v92=(function() return  #"/";end)();break;end end break;end end end if (v92== #"}") then if (v93== #",") then v95=(function() return v94()~=(0 + 0) ;end)();elseif (v93==2) then v95=(function() return v96();end)();elseif (v93~= #"gha") then else v95=(function() return v97();end)();end v98[v99]=(function() return v95;end)();break;end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v53=(function() return function(v100,v101,v102) local v103=(function() return 836 -(660 + 176) ;end)();while true do if (v103~=(0 + 0)) then else local v115=(function() return 202 -(14 + 188) ;end)();local v116=(function() return;end)();while true do if (v115==(675 -(534 + 141))) then v116=(function() return 0 + 0 ;end)();while true do if (v116==(0 + 0)) then local v123=(function() return 0;end)();while true do if ((0 + 0)~=v123) then else v100[v101-#"|" ]=(function() return v102();end)();return v100,v101,v102;end end end end break;end end end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"|",v58 do FlatIdent_43862,Type,v21,Cons,v24,v25,v59,v69=(function() return v52(FlatIdent_43862,Type,v21,Cons,v24,v25,v59,v69);end)();end v57[ #"xxx"]=(function() return v21();end)();for v70= #"\\",v23() do local v71=(function() return 0;end)();local v72=(function() return;end)();while true do if (0~=v71) then else v72=(function() return v21();end)();if (v20(v72, #"|", #"]")==(0 -0)) then local v117=(function() return 0;end)();local v118=(function() return;end)();local v119=(function() return;end)();local v120=(function() return;end)();while true do if (v117~=(4 -1)) then else if (v20(v119, #"-19", #"xnx")~= #"~") then else v120[ #"?id="]=(function() return v59[v120[ #"http"]];end)();end v54[v70]=(function() return v120;end)();break;end if (v117~=(0 -0)) then else local v122=(function() return 0 + 0 ;end)();while true do if (1==v122) then v117=(function() return 1;end)();break;end if (v122~=0) then else local v129=(function() return 0 + 0 ;end)();while true do if (v129~=(396 -(115 + 281))) then else v118=(function() return v20(v72,2, #"xnx");end)();v119=(function() return v20(v72, #"?id=",13 -7 );end)();v129=(function() return 1;end)();end if (1==v129) then v122=(function() return 1 + 0 ;end)();break;end end end end end if (v117==(2 -1)) then v120=(function() return {v22(),v22(),nil,nil};end)();if (v118==0) then local v125=(function() return 867 -(550 + 317) ;end)();local v126=(function() return;end)();while true do if (v125~=(0 -0)) then else v126=(function() return 0;end)();while true do if (v126==0) then v120[ #"91("]=(function() return v22();end)();v120[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v118== #"|") then v120[ #"xxx"]=(function() return v23();end)();elseif (v118==(2 -0)) then v120[ #"gha"]=(function() return v23() -((5 -3)^(301 -(134 + 151))) ;end)();elseif (v118== #"nil") then local v305=(function() return 0;end)();while true do if (v305==(1665 -(970 + 695))) then v120[ #"xnx"]=(function() return v23() -(2^(30 -14)) ;end)();v120[ #"http"]=(function() return v22();end)();break;end end end v117=(function() return 1992 -(582 + 1408) ;end)();end if (v117~=2) then else if (v20(v119, #"]", #"[")== #"{") then v120[2]=(function() return v59[v120[2]];end)();end if (v20(v119,6 -4 ,2)== #"{") then v120[ #"xxx"]=(function() return v59[v120[ #"nil"]];end)();end v117=(function() return 3;end)();end end end break;end end end for v73= #"[",v23() do v55,v73,v28=(function() return v53(v55,v73,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1 -0 ];local v65=v61[7 -5 ];local v66=v61[3];return function(...) local v74=v64;local v75=v65;local v76=v66;local v77=v27;local v78=1825 -((1449 -(79 + 175)) + (991 -362)) ;local v79= -(1 -0);local v80={};local v81={...};local v82=v12("#",...) -(534 -(43 + 383 + 107)) ;local v83={};local v84={};for v104=780 -(162 + 618) ,v82 do if (v104>=v76) then v80[v104-v76 ]=v81[v104 + 1 + 0 ];else v84[v104]=v81[v104 + 1 + 0 ];end end local v85=(v82-v76) + (1 -0) ;local v86;local v87;while true do v86=v74[v78];v87=v86[(2 -1) -0 ];if (v87<=(53 -(36 -17))) then if (v87<=((901 -(503 + 396)) + 14)) then if ((v87<=(1643 -(1373 + 263))) or (3677<=2768)) then if (v87<=(1003 -(451 + (730 -(92 + 89))))) then if (v87<=(1 + 0)) then if (v87>(0 -0)) then v84[v86[2 -0 ]]=v84[v86[1387 -(746 + (1237 -599)) ]];elseif ( not v84[v86[1 + 1 + 0 ]] or (277>3338)) then v78=v78 + (1 -0) ;else v78=v86[9 -(4 + 2) ];end elseif ((2610>2560) and (v87>(343 -(218 + 123)))) then if ((v84[v86[1583 -(1535 + 46) ]]==v86[4 + 0 ]) or (1194>3083)) then v78=v78 + (3 -2) + 0 ;else v78=v86[563 -(306 + 35 + 219) ];end else local v134=(0 -0) + 0 ;local v135;local v136;while true do if (v134==0) then v135=v86[(296 + 43) -(10 + 327) ];v136={};v134=1 + 0 ;end if (v134==1) then for v329=1 -0 , #v83 do local v330=v83[v329];for v344=1467 -(430 + 469 + 568) , #v330 do local v345=v330[v344];local v346=v345[1 + 0 ];local v347=v345[4 -2 ];if ((v346==v84) and (v347>=v135)) then v136[v347]=v346[v347];v345[604 -(268 + 335) ]=v136;end end end break;end end end elseif (v87<=(295 -(60 + 230))) then if (v87==4) then v84[v86[574 -(426 + 146) ]]=v84[v86[1 + 2 ]][v86[1460 -(282 + 1174) ]];else local v139=v86[813 -(569 + 242) ];v84[v139]=v84[v139]();end elseif ((916>=747) and (v87==(17 -11))) then v84[v86[1 + 1 ]]={};else do return;end end elseif (v87<=(1 + 10)) then if ((v87<=(1033 -(706 + 318))) or (2444>2954)) then if ((2892<3514) and (v87>(1259 -((2195 -1474) + 530)))) then if  not v84[v86[(1 + 4) -3 ]] then v78=v78 + 1 + 0 ;else v78=v86[1274 -(945 + 326) ];end else do return v84[v86[1 + (1 -0) ]];end end elseif (v87==(24 -14)) then local v142=0 + 0 ;local v143;while true do if (v142==(700 -(271 + 429))) then v143=v86[2 + 0 ];v84[v143]=v84[v143](v84[v143 + (1501 -(1408 + 92)) ]);break;end end else local v144=v86[1088 -(461 + 625) ];v84[v144]=v84[v144](v13(v84,v144 + ((2533 -(485 + 759)) -(993 + 295)) ,v79));end elseif (v87<=(61 -48)) then if (v87>(1 + (25 -14))) then if (v86[1173 -(418 + 753) ]==v84[v86[2 + 2 ]]) then v78=v78 + 1 + 0 ;else v78=v86[508 -(351 + 154) ];end else v84[v86[1 + 1 ]][v86[1 + 2 ]]=v84[v86[533 -(406 + 123) ]];end elseif (v87<=(1783 -(1749 + 20))) then v63[v86[(1190 -(442 + 747)) + 2 ]]=v84[v86[2]];elseif (v87==(1337 -(1249 + 73))) then v84[v86[2]]=v63[v86[2 + 1 ]];else v84[v86[1147 -(466 + 679) ]]=v86[6 -3 ];end elseif (v87<=(71 -46)) then if ((533==533) and (v87<=(17 + 3))) then if (v87<=((3053 -(832 + 303)) -(106 + 1794))) then if (v87>((952 -(88 + 858)) + 11)) then local v150=0 + 0 ;local v151;while true do if (v150==(0 -0)) then v151=v86[5 -3 ];v84[v151]=v84[v151](v84[v151 + 1 + 0 + 0 ]);break;end end else v84[v86[116 -(4 + 0 + 110) ]]={};end elseif (v87==(603 -(57 + 527))) then local v153=v86[1158 -(1074 + 82) ];do return v13(v84,v153,v153 + v86[1430 -(41 + 1386) ] );end else local v154=103 -(17 + 86) ;local v155;while true do if (v154==(0 + 0)) then v155=v86[2];v84[v155](v84[v155 + (1456 -(990 + 465)) ]);break;end end end elseif ((595<=3413) and (v87<=(48 -26))) then if ((3078>=2591) and (v87==(10 + 11))) then local v156=v86[5 -3 ];v84[v156]=v84[v156](v13(v84,v156 + 1 + 0 ,v86[169 -(122 + 44) ]));else v84[v86[2 -0 ]][v86[9 -6 ]]=v86[4 + 0 ];end elseif ((3199<4030) and (v87<=(4 + 1 + 18))) then for v228=v86[3 -(790 -(766 + 23)) ],v86[(335 -267) -(30 + 35) ] do v84[v228]=nil;end elseif ((777<2078) and (v87>((84 -22) -38))) then do return;end else v84[v86[3 -1 ]]=v86[3 + 0 ];end elseif (v87<=(1286 -((2747 -1704) + (726 -512)))) then if (v87<=(102 -75)) then if ((1696<=2282) and (v87==(1238 -(323 + 889)))) then v84[v86[5 -3 ]]=v84[v86[583 -(361 + 219) ]] * v86[1473 -((2342 -(1036 + 37)) + 200) ] ;elseif (v84[v86[322 -(53 + 267) ]]==v84[v86[819 -(98 + 717) ]]) then v78=v78 + ((587 + 240) -(802 + 24)) ;else v78=v86[3];end elseif (v87>(48 -20)) then v84[v86[1 + 1 ]]=v62[v86[416 -(15 + 398) ]];else local v163=v86[984 -(18 + 964) ];local v164=v84[v163];local v165=v86[11 -8 ];for v230=1 + 0 ,v165 do v164[v230]=v84[v163 + v230 ];end end elseif ((v87<=(6 + 25)) or (1761>=2462)) then if ((4551>2328) and (v87==(19 + (21 -10)))) then if ((3825>=467) and (v84[v86[852 -(16 + 4 + (2310 -(641 + 839))) ]]==v86[(926 -(910 + 3)) -9 ])) then v78=v78 + 1 + 0 ;else v78=v86[3 + 0 ];end else v84[v86[2]][v86[3 + 0 ]]=v84[v86[130 -(116 + 10) ]];end elseif ((v87<=(3 + 29)) or (2890==557)) then local v168=738 -(542 + 196) ;local v169;local v170;while true do if (v168==(0 -0)) then v169=v86[6 -3 ];v170=v84[v169];v168=1 + 0 ;end if ((v168==(2 -1)) or (4770==2904)) then for v331=v169 + 1 + 0 ,v86[2 + 2 ] do v170=v170   .. v84[v331] ;end v84[v86[328 -(192 + 134) ]]=v170;break;end end elseif (v87==(86 -53)) then local v282=v86[4 -2 ];local v283=v84[v282];for v315=v282 + (1552 -(1126 + 425)) ,v86[408 -(118 + 287) ] do v7(v283,v84[v315]);end else for v316=v86[7 -5 ],v86[11 -8 ] do v84[v316]=nil;end end elseif ((v87<=(602 -(83 + 468))) or (3903==4536)) then if ((4093<=4845) and (v87<=(1848 -(1202 + 604)))) then if ((1569<=3647) and (v87<=(177 -139))) then if (v87<=(1157 -(118 + 1003))) then if (v87>((259 -157) -67)) then local v171=v86[379 -(142 + 235) ];v84[v171]=v84[v171]();else local v173=v86[9 -7 ];local v174={};for v233=1 + 0 , #v83 do local v234=v83[v233];for v284=977 -(553 + 424) , #v234 do local v285=v234[v284];local v286=v285[1 -(1684 -(1466 + 218)) ];local v287=v285[2 + 0 ];if ((v286==v84) and (v287>=v173)) then local v332=0 + 0 ;while true do if (v332==(0 + 0)) then v174[v287]=v286[v287];v285[1 + 0 ]=v174;break;end end end end end end elseif ((v87>(16 + 10 + 11)) or (4046>=4927)) then local v175=v86[(1150 -(556 + 592)) + 0 ];local v176,v177=v77(v84[v175](v13(v84,v175 + ((1 + 1) -1) ,v86[6 -3 ])));v79=(v177 + v175) -(2 -1) ;local v178=0 -0 ;for v235=v175,v79 do v178=v178 + 1 + 0 ;v84[v235]=v176[v178];end else local v179=v86[9 -7 ];local v180={v84[v179](v84[v179 + (754 -(239 + 514)) ])};local v181=512 -(409 + 103) ;for v238=v179,v86[2 + 2 ] do v181=v181 + (96 -(51 + 44)) ;v84[v238]=v180[v181];end end elseif (v87<=(12 + 28)) then if (v87==(1368 -(797 + (1340 -(329 + 479))))) then local v182=v86[2 + 0 ];v84[v182](v13(v84,v182 + (727 -((1082 -(174 + 680)) + 498)) ,v86[2 + 1 ]));elseif v84[v86[4 -2 ]] then v78=v78 + (1203 -(373 + 829)) ;else v78=v86[734 -(476 + 255) ];end elseif (v87>(1171 -(369 + (2614 -1853)))) then v63[v86[3]]=v84[v86[1907 -(830 + 1075) ]];else v84[v86[2 + 0 ]]=v84[v86[(10 -5) -2 ]] -v84[v86[4 + 0 ]] ;end elseif (v87<=(86 -40)) then if (v87<=(282 -(46 + 18 + 174))) then if (v87>43) then local v186=v86[1 + 1 ];local v187=v84[v186];local v188=v86[3 -0 ];for v241=337 -(144 + (931 -(396 + 343))) ,v188 do v187[v241]=v84[v186 + v241 ];end else local v189=v75[v86[219 -(42 + 16 + 158) ]];local v190;local v191={};v190=v10({},{__index=function(v244,v245) local v246=0 + 0 ;local v247;while true do if ((4623>=2787) and (v246==(0 + 0))) then v247=v191[v245];return v247[1 -0 ][v247[1 + 1 ]];end end end,__newindex=function(v248,v249,v250) local v251=v191[v249];v251[1505 -(363 + 1141) ][v251[1582 -(1183 + 397) ]]=v250;end});for v253=2 -(1390 -(135 + 1254)) ,v86[1 + (11 -8) ] do local v254=0 + 0 ;local v255;while true do if (v254==(1 + 0)) then if (v255[1976 -(1913 + 62) ]==(1 + 0)) then v191[v253-(2 -1) ]={v84,v255[1664 -(1477 + 184) ]};else v191[v253-1 ]={v62,v255[859 -(564 + 292) ]};end v83[ #v83 + (1 -0) ]=v191;break;end if (v254==(0 -0)) then v78=v78 + (305 -(244 + 60)) ;v255=v74[v78];v254=(575 -(102 + 472)) + 0 ;end end end v84[v86[4 -2 ]]=v29(v189,v190,v63);end elseif (v87>(521 -(41 + 435))) then local v193=1001 -(938 + 60 + 3) ;local v194;local v195;local v196;local v197;while true do if (v193==((0 + 0) -0)) then v194=v86[2 + 0 ];v195,v196=v77(v84[v194](v13(v84,v194 + ((1050 + 76) -(936 + 189)) ,v86[1815 -(1293 + 519) ])));v193=1 + 0 ;end if ((2234>=1230) and (v193==(1614 -(1565 + 48)))) then v79=(v196 + v194) -(1 + 0) ;v197=0 -0 ;v193=1140 -(782 + 356) ;end if (v193==((1814 -(320 + 1225)) -(176 + 91))) then for v336=v194,v79 do v197=v197 + (2 -1) ;v84[v336]=v195[v197];end break;end end else v84[v86[2 -(0 -0) ]]=v84[v86[1095 -(975 + 117) ]];end elseif (v87<=((1177 + 746) -(157 + 1718))) then if ((v87>(39 + 8)) or (343==1786)) then if ((2570>2409) and v84[v86[6 -4 ]]) then v78=v78 + (1465 -(157 + 1307)) ;else v78=v86[(1861 -(821 + 1038)) + 1 ];end else do return v84[v86[6 -4 ]];end end elseif ((v87<=(1067 -(697 + 321))) or (2609>=3234)) then local v200=v86[(12 -7) -3 ];v84[v200](v13(v84,v200 + 1 ,v86[9 -6 ]));elseif (v87>(105 -55)) then v84[v86[4 -2 ]][v86[2 + 1 ]]=v86[5 -(1 + 0) ];else local v292=v86[3 -1 ];local v293=v84[v86[7 -4 ]];v84[v292 + (1228 -(322 + 905)) ]=v293;v84[v292]=v293[v86[615 -(602 + 9) ]];end elseif (v87<=(1249 -(449 + 740))) then if (v87<=(927 -(826 + (81 -35)))) then if (v87<=(1336 -(1040 + 243))) then if (v87==(999 -(245 + 702))) then v84[v86[1849 -(559 + 1288) ]]= #v84[v86[3]];else local v202=(0 + 0) -0 ;local v203;while true do if (v202==(0 + 0)) then v203=v86[(4709 -2809) -(260 + 1638) ];v84[v203]=v84[v203](v13(v84,v203 + ((1467 -(834 + 192)) -(382 + 58)) ,v79));break;end end end elseif (v87==(172 -(8 + 110))) then local v204=0 -0 ;local v205;while true do if ((v204==(0 + 0)) or (3033>=4031)) then v205=v86[2];v84[v205]=v84[v205](v13(v84,v205 + (3 -2) ,v86[3]));break;end end elseif (v84[v86[2]]==v84[v86[4 + 0 ]]) then v78=v78 + (1 -0) ;else v78=v86[8 -5 ];end elseif (v87<=(1262 -(902 + 303))) then if ((v87>(122 -66)) or (1401==4668)) then v84[v86[4 -(1 + 1) ]]=v84[v86[1 + 2 ]][v86[1694 -(1121 + 569) ]];else local v208=214 -(22 + 192) ;local v209;while true do if ((2776>=1321) and (v208==(683 -(483 + 200)))) then v209=v86[2 + 0 + 0 ];v84[v209](v84[v209 + 1 ]);break;end end end elseif ((v87<=58) or (487>2303)) then v84[v86[1465 -(1404 + (90 -31)) ]]=v63[v86[8 -5 ]];elseif (v87==(78 -(323 -(300 + 4)))) then if (v86[2]==v84[v86[769 -(468 + 297) ]]) then v78=v78 + (563 -(334 + 228)) ;else v78=v86[(3 + 5) -5 ];end else v84[v86[2 + 0 ]]=v84[v86[10 -7 ]] -v84[v86[8 -4 ]] ;end elseif ((v87<=(59 + 5)) or (4503==3462)) then if ((553<=1543) and (v87<=(111 -49))) then if (v87==(18 + 43)) then v84[v86[(622 -384) -((503 -(112 + 250)) + 95) ]]=v84[v86[3 + 0 ]] * v86[9 -5 ] ;else v78=v86[3 + 0 ];end elseif (v87>(151 -(36 + 52))) then v84[v86[1 + 1 ]]=v62[v86[8 -5 ]];else local v216=v86[2 + 0 ];local v217={v84[v216](v84[v216 + 1 + 0 ])};local v218=0 -0 ;for v256=v216,v86[(7 -4) + 1 ] do local v257=0 -(0 + 0) ;while true do if ((163 -(48 + 44 + 71))==v257) then v218=v218 + 1 + 0 ;v84[v256]=v217[v218];break;end end end end elseif (v87<=((83 + 27) -(22 + 22))) then if (v87==(830 -(574 + 191))) then local v219=v75[v86[3 + 0 ]];local v220;local v221={};v220=v10({},{__index=function(v258,v259) local v260=0 -0 ;local v261;while true do if (v260==(1333 -(605 + 728))) then v261=v221[v259];return v261[1 + 0 ][v261[851 -(254 + 595) ]];end end end,__newindex=function(v262,v263,v264) local v265=v221[v263];v265[127 -(55 + 71) ][v265[2 -0 ]]=v264;end});for v267=1791 -(573 + 1217) ,v86[10 -6 ] do v78=v78 + 1 + 0 ;local v268=v74[v78];if (v268[3 -2 ]==(1 -(1414 -(1001 + 413)))) then v221[v267-(940 -(714 + 225)) ]={v84,v268[3]};else v221[v267-(1 + 0) ]={v62,v268[3 + 0 ]};end v83[ #v83 + 1 + 0 ]=v221;end v84[v86[808 -(118 + 688) ]]=v29(v219,v220,v63);else v84[v86[50 -(25 + 23) ]]= #v84[v86[1 + 2 ]];end elseif (v87<=(1953 -(927 + 959))) then local v224=796 -(588 + (1090 -(244 + 638))) ;local v225;local v226;while true do if (v224==(0 -0)) then v225=v86[10 -7 ];v226=v84[v225];v224=1801 -(884 + 916) ;end if (v224==(733 -(16 + 716))) then for v343=v225 + (1 -(693 -(627 + 66))) ,v86[101 -(11 + 86) ] do v226=v226   .. v84[v343] ;end v84[v86[4 -2 ]]=v226;break;end end elseif (v87==((1051 -698) -(175 + 110))) then local v299=0;local v300;local v301;while true do if (v299==(0 -(602 -(512 + 90)))) then v300=v86[9 -7 ];v301=v84[v86[1799 -(503 + 1293) ]];v299=2 -(1907 -(1665 + 241)) ;end if (v299==(1 + 0)) then v84[v300 + (1454 -(666 + (1504 -(373 + 344)))) ]=v301;v84[v300]=v301[v86[1065 -(810 + 251) ]];break;end end else v78=v86[428 -(360 + 65) ];end v78=v78 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
